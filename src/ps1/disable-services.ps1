Write-Output 'Set Services to Manual: Turns a bunch of system services to manual that do not need to be running all the time.'

$servicesToDisable = @(
  'AJRouter',
  'Spooler',
  'LanmanWorkstation',
  'LanmanServer',
  'AppVClient',
  'AssignedAccessManagerSvc',
  'DiagTrack',
  'DialogBlockingService',
  'RemoteAccess',
  'RemoteRegistry',
  'UevAgentService',
  'shpamsvc',
  'ssh-agent',
  'tzautoupdate',
  'uhssvc',
  'Fax',
  'DusmSvc',
  'MapsBroker',
  'RetailDemo',
  'wscsvc',
  'SEMgrSvc',
  'NetTcpPortSharing',
  'icssvc',
  'ALG',
  'DoSvc',
  'wmiApSrv',
  'RasAuto',
  'SCPolicySvc',
  'ScDeviceEnum',
  'SCardSvr',
  'SessionEnv',
  'EntAppSvc',
  'wcncsvc',
  'XblAuthManager',
  'XblGameSave',
  'XboxGipSvc',
  'XboxNetApiSvc',
  'lmhosts',
  'seclogon',
  'WpcMonSvc',
  'UmRdpService',
  'TermService',
  'TabletInputService',
  'wisvc',
  'WerSvc',
  'StiSvc',
  'dmwappushservice',
  'MicrosoftEdge*',
  'CDPUserSvc*',
  'IEEtwCollectorService',
  'OneSyncSvc_*',
  'WSAIFabricSvc',
  'SSDPSRV',
  'PrintDeviceConfigurationService',
  'ShellHWDetection',
  'BthAvctpSvc',
  'HvHost',
  'whesvc'
)

$servicesToManual = @(
  'AppIDSvc',
  'AppMgmt',
  'AppReadiness',
  'AppXSvc',
  'Appinfo',
  'AxInstSV',
  'BDESVC',
  'BITS',
  'BTAGService',
  'BcastDVRUserService_*',
  'Browser',
  'CDPSvc',
  'COMSysApp',
  'CaptureService_*',
  'CertPropSvc',
  'ClipSVC',
  'ConsentUxUserSvc_*',
  'CredentialEnrollmentManagerUserSvc_*',
  'CscService',
  'DcpSvc',
  'DevQueryBroker',
  'DeviceAssociationBrokerSvc_*',
  'DeviceAssociationService',
  'DeviceInstall',
  'DevicePickerUserSvc_*',
  'DevicesFlowUserSvc_*',
  'DisplayEnhancementService',
  'DmEnrollmentSvc',
  'DsSvc',
  'DsmSvc',
  'EFS',
  'EapHost',
  'FDResPub',
  'FrameServer',
  'FrameServerMonitor',
  'GraphicsPerfSvc',
  'HomeGroupListener',
  'HomeGroupProvider',
  'IKEEXT',
  'InstallService',
  'InventorySvc',
  'IpxlatCfgSvc',
  'KtmRm',
  'LicenseManager',
  'LxpSvc',
  'MSDTC',
  'MSiSCSI',
  'McpManagementService',
  'MessagingService_*',
  'MixedRealityOpenXRSvc',
  'MsKeyboardFilter',
  'NPSMSvc_*',
  'NaturalAuthentication',
  'NcaSvc',
  'NcbService',
  'NcdAutoSetup',
  'NetSetupSvc',
  'Netman',
  'NgcCtnrSvc',
  'NgcSvc',
  'NlaSvc',
  'P9RdrService_*',
  'PNRPAutoReg',
  'PNRPsvc',
  'PcaSvc',
  'PeerDistSvc',
  'PenService_*',
  'PerfHost',
  'PhoneSvc',
  'PimIndexMaintenanceSvc_*',
  'PlugPlay',
  'PolicyAgent',
  'PrintNotify',
  'PrintWorkflowUserSvc_*',
  'PushToInstall',
  'QWAVE',
  'RasMan',
  'RmSvc',
  'RpcLocator',
  'SDRSVC',
  'SNMPTRAP',
  'SNMPTrap',
  'SecurityHealthService',
  'Sense',
  'SensorDataService',
  'SensorService',
  'SensrSvc',
  'SharedAccess',
  'SharedRealitySvc',
  'SmsRouter',
  'SstpSvc',
  'StateRepository',
  'StorSvc',
  'TapiSrv',
  'TextInputManagementService',
  'TieringEngineService',
  'TimeBroker',
  'TimeBrokerSvc',
  'TokenBroker',
  'TroubleshootingSvc',
  'TrustedInstaller',
  'UI0Detect',
  'UdkUserSvc_*',
  'UnistoreSvc_*',
  'UserDataSvc_*',
  'UsoSvc',
  'VSS',
  'VacSvc',
  'W32Time',
  'WEPHOSTSVC',
  'WFDSConMgrSvc',
  'WMPNetworkSvc',
  'WManSvc',
  'WPDBusEnum',
  'WSService',
  'WSearch',
  'WaaSMedicSvc',
  'WalletService',
  'WarpJITSvc',
  'WbioSrvc',
  'WcsPlugInService',
  'WdNisSvc',
  'WdiServiceHost',
  'WdiSystemHost',
  'WebClient',
  'Wecsvc',
  'WiaRpc',
  'WinHttpAutoProxySvc',
  'WinRM',
  'WpnService',
  'WwanSvc',
  'autotimesvc',
  'bthserv',
  'camsvc',
  'cbdhsvc_*',
  'cloudidsvc',
  'dcsvc',
  'defragsvc',
  'diagnosticshub.standardcollector.service',
  'diagsvc',
  'dot3svc',
  'embeddedmode',
  'fdPHost',
  'fhsvc',
  'hidserv',
  'lfsvc',
  'lltdsvc',
  'msiserver',
  'netprofm',
  'p2pimsvc',
  'p2psvc',
  'perceptionsimulation',
  'pla',
  'smphost',
  'spectrum',
  'sppsvc',
  'svsvc',
  'swprv',
  'upnphost',
  'vds',
  'vm3dservice',
  'vmicguestinterface',
  'vmicheartbeat',
  'vmickvpexchange',
  'vmicrdv',
  'vmicshutdown',
  'vmictimesync',
  'vmicvmsession',
  'vmicvss',
  'vmvss',
  'wbengine',
  'webthreatdefsvc',
  'wercplsupport',
  'wlidsvc',
  'wlpasvc',
  'workfolderssvc',
  'wuauserv',
  'wudfsvc'
)

Get-Service |
ForEach-Object {
  $serviceName = $_.Name

  if ($servicesToManual | Where-Object { $serviceName -Like $_ }) {
    Write-Output "Manual: $serviceName..."
    Set-Service -Name $serviceName -StartupType Manual -ErrorAction Continue
  }

  if ($servicesToDisable | Where-Object { $serviceName -Like $_ }) {
    Write-Output "Disable: $serviceName..."
    Set-Service -Name $serviceName -StartupType Disabled -ErrorAction Continue
  }
}